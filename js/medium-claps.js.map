{"mappings":";;;;;;;;;;;;;AAGA,CAAY,YAAE,CAAsB,AAAtB,EAAsB,AAAtB,oBAAsB;SACpB,yCAAW,CAAC,MAAM,GAAG,CAAC;IAClC,OAAO,EAAE,CAAE;IACX,IAAI,EAAE,CAAkB;IACxB,QAAQ,EAAE,CAAgB;IAC1B,YAAY,EAAE,CAAE;AACpB,CAAC,EAAE,CAAC;IACA,KAAK,CAAC,cAAc,GAAG,CAAC;QACpB,IAAI,EAAE,CAAkB;QACxB,QAAQ,EAAE,CAAgB;IAC9B,CAAC;IAED,EAAE,GAAG,MAAM,CAAC,IAAI,EACZ,MAAM,CAAC,IAAI,GAAG,cAAc,CAAC,IAAI;IAGrC,EAAE,GAAG,MAAM,CAAC,QAAQ,EAChB,MAAM,CAAC,QAAQ,GAAG,cAAc,CAAC,QAAQ;IAG7C,EAAE,GAAG,MAAM,CAAC,OAAO,EACf,KAAK,CAAE,CAA+C;IAE1D,EAAE,GAAG,MAAM,CAAC,YAAY,EACpB,KAAK,CAAE,CAAoD;IAG/D,KAAK,CAAC,YAAY,GAAG,CAAC;QAClB,QAAQ,EAAE,CAAe;QACzB,SAAS,EAAE,CAAgB;QAC3B,UAAU,EAAE,CAAiB;QAC7B,SAAS,EAAE,CAAgB;IAC/B,CAAC;IAED,KAAK,CAAC,qBAAqB,IAAI,UAAU,GAAK,CAAC;QAC3C,GAAG,CAAC,GAAG,GAAG,QAAQ,CAAC,aAAa,CAAC,CAAK;QACtC,GAAG,CAAC,SAAS,GAAG,UAAU,CAAC,IAAI;QAC/B,MAAM,CAAC,GAAG,CAAC,UAAU;IACzB,CAAC;IAED,KAAK,CAAC,iCAAiC,IAAI,IAAI,GAAK,CAAC;QACjD,KAAK,CAAC,KAAK;QACX,GAAG,CAAC,OAAO,GAAG,KAAK,CAAC,IAAI,CAAC,IAAI;QAC7B,MAAM,CAAC,OAAO,GAAG,CAAc,gBAAG,OAAO,CAAC,CAAC,IAAI,MAAM,CAAC,YAAY;IACtE,CAAC;IAED,KAAK,CAAC,MAAM,CAAC,OAAO,EACf,IAAI,EAAC,QAAQ,GAAI,QAAQ,CAAC,IAAI;MAC9B,IAAI,EAAC,IAAI,GAAI,CAAC;QACX,MAAM,CAAC,GAAG,CAAC,0CAAM,GAAG,WAAW,CAAC,IAAI,CAAC,QAAQ;IACjD,CAAC,EACA,IAAI,EAAC,IAAI,GAAI,CAAC;QACX,GAAG,EAAE,GAAG,CAAC,IAAI,IAAI,IAAI,CAAC,KAAK,CAAE,CAAC;YAC1B,GAAG,CAAC,QAAQ,GAAG,iCAAiC,CAAC,IAAI,CAAC,CAAiB,qBAAK,IAAI,CAAC,CAAS;YAE1F,KAAK,CAAC,IAAI,GAAG,CAAC;gBACV,UAAU,EAAE,IAAI,CAAC,OAAO;gBACxB,SAAS,EAAE,QAAQ;gBACnB,QAAQ,EAAE,IAAI,CAAC,IAAI;gBACnB,SAAS,EAAE,IAAI,CAAC,KAAK;YACzB,CAAC;YAED,EAAsC,AAAtC,oCAAsC;YACtC,KAAK,CAAC,OAAO,GAAG,QAAQ,CAAC,aAAa,CAAC,MAAM,CAAC,QAAQ,EACjD,OAAO,CAAC,SAAS,CAAC,IAAI,EACtB,iBAAiB,CAAC,SAAS,CAC3B,OAAO,CAAC,YAAY,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAC5C,OAAO,CAAC,YAAY,CAAC,SAAS,EAAE,IAAI,CAAC,SAAS,EAC9C,OAAO,CAAC,YAAY,CAAC,UAAU,EAAE,IAAI,CAAC,UAAU,EAChD,OAAO,CAAC,YAAY,CAAC,SAAS,EAAE,IAAI,CAAC,SAAS;YAEnD,EAA0B,AAA1B,wBAA0B;YAC1B,KAAK,CAAC,EAAE,GAAG,qBAAqB,CAAC,OAAO;YACxC,QAAQ,CAAC,aAAa,CAAC,MAAM,CAAC,IAAI,EAAE,WAAW,CAAC,EAAE;YAElD,EAAmE,AAAnE,iEAAmE;YACnE,EAA6C,AAA7C,2CAA6C;YAC7C,MAAM,CAAC,UAAU,KAAO,EAAE,CAAC,SAAS,CAAC,GAAG,CAAC,CAAY;cAAG,GAAG;QAC/D,CAAC;IACL,CAAC,EACA,KAAK,CAAC,OAAO,CAAC,GAAG;AAC1B,CAAC","sources":["src/medium-claps.js"],"sourcesContent":["import Parser from 'rss-parser';\r\nimport './medium-claps.css';\r\n\r\n\"use strict\"; // Start of use strict\r\nexport function MediumClaps(config = {\r\n    feedUrl: '',\r\n    root: '#claps-container',\r\n    template: '#post-template',\r\n    missingImage: '',\r\n}) {\r\n    const configDefaults = {\r\n        root: '#claps-container',\r\n        template: '#post-template',\r\n    };\r\n\r\n    if (!config.root) {\r\n        config.root = configDefaults.root;\r\n    }\r\n\r\n    if (!config.template) {\r\n        config.template = configDefaults.template;\r\n    }\r\n\r\n    if (!config.feedUrl)\r\n        throw ('Config incomplete. Please provide a feed URL.');\r\n\r\n    if (!config.missingImage) {\r\n        throw ('Config incomplete. Please provide a missing image.')\r\n    }\r\n\r\n    const placeholders = {\r\n        postLink: '#{{postLink}}',\r\n        postTitle: '#{{postTitle}}',\r\n        authorName: '#{{postAuthor}}',\r\n        postImage: '#{{postImage}}',\r\n    }\r\n\r\n    const createElementFromHTML = (htmlString) => {\r\n        var div = document.createElement('div');\r\n        div.innerHTML = htmlString.trim();\r\n        return div.firstChild;\r\n    }\r\n\r\n    const getFirstImageOfPostOrMissingImage = (html) => {\r\n        const regex = /<img.*?src=\"https:\\/\\/cdn-(.*?)\"/;\r\n        let matches = regex.exec(html);\r\n        return matches ? \"https://cdn-\" + matches[1] : config.missingImage;\r\n    };\r\n\r\n    fetch(config.feedUrl)\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            return new Parser().parseString(data.contents);\r\n        })\r\n        .then(feed => {\r\n            for (let item of feed.items) {\r\n                let imageUrl = getFirstImageOfPostOrMissingImage(item['content:encoded'] || item['content']);\r\n\r\n                const post = {\r\n                    authorName: item.creator,\r\n                    postImage: imageUrl,\r\n                    postLink: item.link,\r\n                    postTitle: item.title\r\n                }\r\n\r\n                //replace all placeholders in template\r\n                const newPost = document.querySelector(config.template)\r\n                    .content.cloneNode(true)\r\n                    .firstElementChild.outerHTML\r\n                    .replace(placeholders.postLink, post.postLink)\r\n                    .replace(placeholders.postTitle, post.postTitle)\r\n                    .replace(placeholders.authorName, post.authorName)\r\n                    .replace(placeholders.postImage, post.postImage);\r\n\r\n                //add the post to the root\r\n                const el = createElementFromHTML(newPost);\r\n                document.querySelector(config.root).appendChild(el);\r\n\r\n                //use setTimeout to make sure the browser processes the new element\r\n                //necessary to make transitions work properly\r\n                window.setTimeout(() => el.classList.add('is-visible'), 100);\r\n            }\r\n        })\r\n        .catch(console.log);\r\n}"],"names":[],"version":3,"file":"medium-claps.js.map"}